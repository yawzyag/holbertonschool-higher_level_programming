# doctest_in_help.txt
===============================
 How to Use doctest_in_help.py
===============================

This library is very simple, since it only has one function called
``my_function()``.

Numbers
=======

``my_function()`` returns the product of its arguments.  For numbers,
that value is equivalent to using the ``*`` operator.

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is John Smith

It also works with 1 value

::

    >>> say_my_name("Bob")
    My name is Bob 


Non-String
===========

Because ``*`` is also defined on data types other than numbers,
``my_function()`` works just as well if one of the arguments is a
string, a list, or a tuple.

::

    >>> say_my_name(12, "White")
    Traceback (innermost last):
    TypeError: first_name must be a string

    >>> say_my_name("White", 12)
    Traceback (innermost last):
    TypeError: last_name must be a string

    >>> say_my_name()
    Traceback (innermost last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'